##################################################################################
############################  环境配置默认需要修改 #################################
##################################################################################

# 1、配置启动环境
spring.profiles.active=prod


##################################################################################
############################# 通用配置默认不需要修改 ################################
##################################################################################

# 2、mybatis配置
mybatis-plus.mapper-locations=classpath:mapper/*.xml
mybatis-plus.type-aliases-package=com.jack.jackAdvanced.domain.entity
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.global-config.db-column-underline=true
mybatis-plus.global-config.id-type=0

# 3、logback日志配置
# 设置应用的日志级别及路径
logging.config=classpath:logback-spring.xml
logging.level.com.jack.jackAdvanced=debug 
log.file.name.path=./logs/%d{yyyy-MM-dd}/cims-%i.log
log.errorfile.name.path=./logs/%d{yyyy-MM-dd}/error-%i.log
# 最长保留天数
log.maxhistory=30
# 文件单个最大为多少
log.maxFileSize=50MB
# 文件总共最大为多少
log.totalsizecap=1GB
# 输出格式
log.out.encoder=%d %-4relative [%thread] %-5level %logger{35} - %msg%n

# 4、文件上传大小限制配置
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB


# 5、MinIO对象存储相关配置
minio.url=http://121.4.221.119:9090/
minio.bucketName=jackadvanced
minio.accessKey=minioadmin
minio.secretKey=minioadmin


# 6、配置数据库读写分离组件
# 数据源名字
spring.shardingsphere.datasource.names=master0,slave0
spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
# 主库地址配置
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://121.4.221.119:3307/jackAdvanced?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=root
# 从库地址配置
spring.shardingsphere.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.url=jdbc:mysql://121.4.221.119:3308/jackAdvanced?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.slave0.username=root
spring.shardingsphere.datasource.slave0.password=root

#数据分表规则
#指定所需分的表
spring.shardingsphere.sharding.tables.tb_tjks.actual-data-nodes=master0.tb_tjks_$->{0..5}
#指定主键
spring.shardingsphere.sharding.tables.tb_tjks.table-strategy.inline.sharding-column=id
#分表规则为主键除以2取模
spring.shardingsphere.sharding.tables.tb_tjks.table-strategy.inline.algorithm-expression=tb_tjks_$->{id % 5}
# 指定 tb_tjks 表里面主键 id 生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.tb_tjks.key-generator.column=id
spring.shardingsphere.sharding.tables.tb_tjks.key-generator.type=SNOWFLAKE

# 配置读写分离
spring.shardingsphere.sharding.master-slave-rules.master0.master-data-source-name=master0
spring.shardingsphere.sharding.master-slave-rules.master0.slave-data-source-names=slave0

# 允许一个实体类对应两张表
spring.main.allow-bean-definition-overriding=true
# 打印sql
spring.shardingsphere.props.sql.show=true










